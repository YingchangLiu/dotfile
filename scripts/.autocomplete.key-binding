#!/bin/zsh
zmodload zsh/complist
zmodload -F zsh/parameter p:funcstack p:functions
zmodload -F zsh/terminfo p:terminfo

.autocomplete.key-binding.precmd() {
  emulate -L zsh
  setopt $_autocomplete__func_opts[@]

  .autocomplete.key-binding.rebind main expand-or-complete complete-word '\t'
  .autocomplete.key-binding.rebind main expand-or-complete-prefix complete-word '\t'
  .autocomplete.key-binding.rebind main menu-expand-or-complete complete-word '\t'

  .autocomplete.key-binding.bound main '\t' complete-word &&
      .autocomplete.key-binding.bind-menu accept-line '\t'

  .autocomplete.key-binding.bind emacs history-search-backward $_autocomplete__key_alt_up[@] $terminfo[kpp]
  .autocomplete.key-binding.bind vicmd history-search-backward $_autocomplete__key_up[@]
  .autocomplete.key-binding.bind viins history-search-backward $terminfo[kpp]

  .autocomplete.key-binding.bind emacs menu-select $_autocomplete__key_alt_down[@] $terminfo[knp]
  .autocomplete.key-binding.bind vicmd menu-select $_autocomplete__key_down[@]
  .autocomplete.key-binding.bind viins menu-select $terminfo[knp]

  unset -m '_autocomplete__key_*'
  unfunction .autocomplete.key-binding.{{,re,un}bind,bound}
}

.autocomplete.key-binding.bind() {
  local -P keymap=$1 widget=$2
  shift 2
  builtin bindkey -M "$keymap" "${@:^^widget}"
}

.autocomplete.key-binding.bind-menu() {
  .autocomplete.key-binding.bind isearch "$@"
  .autocomplete.key-binding.bind menuselect "$@"
}

.autocomplete.key-binding.bound() {
  [[ $( builtin bindkey -M "$1" "$2" ) == \"[^[:space:]]##\"" $3" ]]
}

.autocomplete.key-binding.rebind() {
  local -P keymap=$1 old=$2 new=$3 key=
  shift 3
  for key; do
    .autocomplete.key-binding.bound "$keymap" "$key" "$old" &&
        builtin bindkey -M "$keymap" "$key" "$new"
  done
}

.autocomplete.key-binding.unbind() {
  .autocomplete.key-binding.bound "$1" "$2" "$3" &&
      builtin bindkey -M "$1" -r "$2"
}

local -Pa prefix=( '\e'{\[,O} )
typeset -ga _autocomplete__key_up=( ${^prefix}A )
typeset -ga _autocomplete__key_down=( ${^prefix}B )
typeset -ga _autocomplete__key_alt_up=( '\e'$^_autocomplete__key_up '\e[1;3A' )
typeset -ga _autocomplete__key_alt_down=( '\e'$^_autocomplete__key_down '\e[1;3B' )

.autocomplete.key-binding.bind emacs up-line-or-search $_autocomplete__key_up[@]
.autocomplete.key-binding.bind viins up-line-or-search $_autocomplete__key_up[@]

.autocomplete.key-binding.bind emacs down-line-or-select $_autocomplete__key_down[@]
.autocomplete.key-binding.bind viins down-line-or-select $_autocomplete__key_down[@]
.autocomplete.key-binding.bind vicmd down-line-or-select $_autocomplete__key_down[@]

.autocomplete.key-binding.rebind emacs '^D' delete-char-or-list delete-char

.autocomplete.key-binding.unbind emacs '^X*' expand-word

.autocomplete.key-binding.unbind emacs '\e^D' list-choices
.autocomplete.key-binding.unbind vicmd   '^D' list-choices
.autocomplete.key-binding.unbind vicmd    '=' list-choices
.autocomplete.key-binding.unbind viins   '^D' list-choices

.autocomplete.key-binding.bind menuselect vi-backward-blank-word $_autocomplete__key_alt_up[@]
.autocomplete.key-binding.bind menuselect  vi-forward-blank-word $_autocomplete__key_alt_down[@]
builtin bindkey -M menuselect \
    '\r'  .accept-line \
    '^@'   accept-and-hold \
    "$terminfo[kpp]" backward-word \
    "$terminfo[knp]" forward-word \
    '^_' .undo
