#!/bin/zsh
zmodload -Fa zsh/files b:zf_mkdir b:zf_rm
zmodload -F zsh/parameter p:functions
zmodload -F zsh/system p:sysparams
zmodload -F zsh/zleparameter p:widgets
zmodload -Fa zsh/zutil b:zstyle
builtin autoload -Uz add-zsh-hook zmathfunc
zmathfunc

.autocomplete.__init__.precmd() {
  # Workaround for https://github.com/zdharma/zinit/issues/366
  # NOTE: Needs to come before _everything_ else!
  [[ -v functions[.zinit-shade-off] ]] &&
    .zinit-shade-off "${___mode:-load}"
  [[ -v functions[.zinit-tmp-subst-off] ]] &&
    .zinit-tmp-subst-off "${___mode:-load}"

  () {
    emulate -L zsh
    setopt $_autocomplete__func_opts[@]

    # Workaround for https://github.com/zdharma/zinit/issues/366
    [[ -v functions[.zinit-shade-off] ]] &&
      .zinit-shade-off "${___mode:-load}"

    add-zsh-hook -d precmd .autocomplete.__init__.precmd
    unfunction .autocomplete.__init__.precmd

    # Workaround for https://www.zsh.org/mla/workers/2021/msg01310.html
    if builtin zstyle -L zle-hook types > /dev/null; then
      private hook=
      for hook in \
          zle-{isearch-{exit,update},line-{pre-redraw,init,finish},history-line-set,keymap-select}
      do
        [[ -v widgets[$hook] &&
              $widgets[$hook] == user:_zsh_highlight_widget_orig-s*-r<->-$hook ]] &&
            builtin zle -N $hook azhw:$hook
      done
    fi
  }

  private mod=
  for mod in compinit config widget key-binding recent-dirs async; do
    mod=.autocomplete.$mod.precmd
    if [[ -v functions[$mod] ]]; then
      $mod
      unfunction $mod
    fi
  done
}

private xdg_data_home=${XDG_DATA_HOME:-$HOME/.private/share}

private zsh_data_dir=$xdg_data_home/zsh
[[ -d $zsh_data_dir ]] ||
    zf_mkdir -pm 0700 $zsh_data_dir

private logdir=$xdg_data_home/zsh-autocomplete/log
[[ -d $logdir ]] ||
    zf_mkdir -p -- $logdir
private -a older_than_a_week=( $logdir/*(Nmd+7) )
(( $#older_than_a_week[@] )) &&
    zf_rm -f -- $older_than_a_week[@]
typeset -gH _autocomplete__log_file=$logdir/${(%):-%D{%F}}.log

typeset -gH _autocomplete__prev=$'\0' _autocomplete__next=$'\n# %e. %N'
typeset -gH _autocomplete__time=$' [%D{%T.%.}]\n'

private ps4=
ps4+='${${_autocomplete__prev:#${(%)_autocomplete__next}}:+'
ps4+='${_autocomplete__prev::=${(%)_autocomplete__next}}${(%)_autocomplete__time}}'
ps4+=$'%I%(?,\t, ->%?\t)%(1_,%_ ,)'
typeset -gH _autocomplete__ps4="$ps4"

private zsh_cache_dir=${XDG_CACHE_HOME:-$HOME/.cache}/zsh
[[ -d $zsh_cache_dir ]] ||
    zf_mkdir -pm 0700 $zsh_cache_dir

private mod=
for mod in compinit config widget key-binding recent-dirs async; do
  if builtin zstyle -T ':autocomplete:' $mod; then
    builtin autoload -Uz ~zsh-autocomplete/scripts/.autocomplete.$mod
    .autocomplete.$mod "$@"
    unfunction .autocomplete.$mod
  fi
done

add-zsh-hook precmd .autocomplete.__init__.precmd

# Ensure we run before zsh-autosuggestions.
(( $precmd_functions[(I)_zsh_autosuggest_start] )) &&
    precmd_functions=( ${precmd_functions[@]:#_zsh_autosuggest_start} _zsh_autosuggest_start )
