#!/bin/zsh
zmodload -F zsh/zutil b:zstyle

.autocomplete.config.precmd() {
  # Remove incompatible settings.
  zstyle -d ':completion:*:functions' ignored-patterns
  zstyle -d ':completion:*:*:*:*:*' menu
  zstyle -d '*' single-ignored
  zstyle -d ':completion:*' special-dirs
  zstyle -d ':completion:*:default' list-prompt
  unset LISTPROMPT
}

zstyle ':completion:*' use-cache yes
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/compcache"

zstyle -e ':completion:*' completer _autocomplete.config.completer
_autocomplete.config.completer() {
  reply=( _complete ); [[ -z $BUFFER ]] ||
    reply=(
      _expand _complete
      _autocomplete.ancestor_dirs _autocomplete.recent_paths
      _history _correct _ignored
    )
}
zstyle ':completion:*' old-list shown
zstyle ':completion:*' old-menu no
zstyle ':completion:*' remove-all-dups yes

zstyle ':completion:history-incremental-*search-*:*' completer _autocomplete.history_lines

zstyle -e ':completion:*:complete:-command-:*' tag-order _autocomplete.config.tag-order
_autocomplete.config.tag-order() {
  reply=( '(|local-)directories executables suffix-aliases' )
  if [[ -z $BUFFER ]]; then
    reply+=( - )
  else
    reply+=( aliases functions 'builtins reserved-words' )
  fi
}
zstyle ':completion:list-expand:complete:-command-:*' tag-order '*'

zstyle ':completion:*:(approximate|correct):*' tag-order '! original' -
zstyle ':completion:list-expand:(approximate|correct):*' tag-order '*'

zstyle ':completion:*:expand:*' tag-order '! all-expansions original' -
zstyle ':completion:list-expand:expand:*' tag-order '*'

zstyle ':completion:*:complete:git-*:(|*-)argument-*:*' tag-order \
  'commit(|-^(tag))s tree(|-ish)s (|*-)files (|recent-)branch(|-nam)es'
zstyle ':completion:list-expand:complete:git-*:(|*-)argument-*:*' tag-order '*'

# Order of specs in a matcher matters.
# If we put l:?|=[[:punct:]] before r:|[[:punct:]]=**, the matching does not work as expected.
zstyle ':completion:*' matcher-list \
  'r:|[.]=** r:?|[-_]=** l:?|=[-_\\ ] m:{[:lower:]-}={[:upper:]_}' \
  'r:|?=** m:{[:lower:]}={[:upper:]}'
zstyle ':completion:list-expand:*' matcher 'l:|=**'
zstyle ':completion:*:options' matcher 'b:-=+'

zstyle ':completion:*' prefix-needed yes
zstyle ':completion:*:expand:*' accept-exact continue
zstyle ':completion:*' ignore-line current
zstyle ':completion:*' ignore-parents 'parent pwd directory'
zstyle ':completion:*:users' ignored-patterns '_*'

zstyle -e ':completion:*:expand:*' glob '
  reply=( "yes" ); _autocomplete.is_glob ||
    reply=( "no" )'
zstyle ':completion:*:expand:*' keep-prefix no # Needed for file type highlighting

# Complete only the tail of a path.
zstyle ':completion:*:paths' expand suffix
zstyle ':completion:*:paths' list-suffixes yes
zstyle ':completion:*:paths' path-completion no

zstyle ':completion:*' group-name ''
zstyle ':completion:*' group-order \
  history-words options \
  executables local-directories directories suffix-aliases \
  aliases functions builtins reserved-words
zstyle ':completion:*' complete-options yes
zstyle ':completion:*' list-dirs-first yes

local h1=$'%{\e[01;02;39m%}' end=$'%{\e[0m%}' hint=$'%{\e[22;02;39m%}' kbd=$'%{\e[22;39m%}'
zstyle ':completion:*:descriptions' format "$h1%d$end"
zstyle ':completion:*:messages' format "$h1%d$end"
zstyle -e ':completion:*:warnings' format '
  local d=${${(j:, :)_lastdescr[@]:#}/(#m)*, /$MATCH[1,-3] or }
  reply=( "'$h1'No ${${:-$PREFIX$SUFFIX}:+matching }$d found.'$end'" )'
zstyle ':completion:*:unambiguous' format \
  "$h1%d$hint  (press ${kbd}Shift${hint}-${kbd}Tab$hint to insert)$end"
zstyle ':completion:*:history-lines' format ''

zstyle ':completion:*' auto-description '%d'

zstyle ':completion:*' insert-sections yes
zstyle ':completion:*' separate-sections yes
